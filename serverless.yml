# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: sweatworks-challenge
app: sweatworks
# org: arka160

provider:
    name: aws
    runtime: nodejs12.x
    region: us-east-1
    stage: dev
    # stage: ${opt:stage,'local'}
    # stage-var: ${opt:stage-var,'local'}
    # environment: ${file(config/env.yml):environment}
functions:
    handshake:
        handler: build/handler.handshake
        events:
            - http:
                  path: handshake
                  method: get
                  cors: true
    signUp:
        handler: build/handlers/user/controller.signUp
        events:
            - http:
                  path: signup
                  method: post
                  cors: true
    logIn:
        handler: build/handlers/user/controller.logIn
        events:
            - http:
                  path: login
                  method: post
                  cors: true
    updatePassword:
        handler: build/handlers/user/controller.updatePassword
        events:
            - http:
                  path: password-update
                  method: post
                  cors: true
    getAllAuthors:
        handler: build/handlers/author/controller.getAllAuthors
        events:
            - http:
                  path: author
                  method: get
                  cors: true
    getAuthor:
        handler: build/handlers/author/controller.getAuthor
        events:
            - http:
                  path: author/{id}
                  method: get
                  cors: true
    createAuthor:
        handler: build/handlers/author/controller.createAuthor
        events:
            - http:
                  path: author
                  method: post
                  cors: true
    updateAuthor:
        handler: build/handlers/author/controller.updateAuthor
        events:
            - http:
                  path: author/{id}
                  method: put
                  cors: true
    deleteAuthor:
        handler: build/handlers/author/controller.deleteAuthor
        events:
            - http:
                  path: author/{id}
                  method: delete
                  cors: true
    getAllPublications:
        handler: build/handlers/publication/controller.getAllPublications
        events:
            - http:
                  path: publication
                  method: get
                  cors: true
    getPublication:
        handler: build/handlers/publication/controller.getPublication
        events:
            - http:
                  path: publication/{id}
                  method: get
                  cors: true
    createPublication:
        handler: build/handlers/publication/controller.createPublication
        events:
            - http:
                  path: publication
                  method: post
                  cors: true
    updatePublication:
        handler: build/handlers/publication/controller.updatePublication
        events:
            - http:
                  path: publication/{id}
                  method: put
                  cors: true
    deletePublication:
        handler: build/handlers/publication/controller.deletePublication
        events:
            - http:
                  path: publication/{id}
                  method: delete
                  cors: true

custom:
    serverless-offline:
        host: 0.0.0.0
plugins:
    - serverless-offline
